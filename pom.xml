<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.happyelements.qa</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>demo</name>
    <description>demo</description>
    <properties>
        <java.version>21</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <!--    <build>-->
    <!--        <plugins>-->
    <!--            &lt;!&ndash;该插件的作用是打包spring-boot的jar包&ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>org.springframework.boot</groupId>-->
    <!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
    <!--                <configuration>-->
    <!--                    &lt;!&ndash;入口其实会自动配置&ndash;&gt;-->
    <!--                    <mainClass>com.happyelements.qa.demo.DemoApplication</mainClass>-->
    <!--                    &lt;!&ndash;不排除的话，systemScope的依赖包会自动被此插件打包进xxx.jar\BOOT-INF\lib，和外部依赖产生冲突 &ndash;&gt;-->
    <!--                    <includeSystemScope>false</includeSystemScope>-->
    <!--                    <skip>false</skip>-->
    <!--                    &lt;!&ndash;分离Jar包&ndash;&gt;-->
    <!--                    <layout>ZIP</layout>-->
    <!--                    <includes>-->
    <!--                        <include>-->
    <!--                            <groupId>nothing</groupId>-->
    <!--                            <artifactId>nothing</artifactId>-->
    <!--                        </include>-->
    <!--                    </includes>-->
    <!--                </configuration>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <goals>-->
    <!--                            <goal>repackage</goal>-->
    <!--                        </goals>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--            </plugin>-->
    <!--            &lt;!&ndash; 该插件的作用是复制依赖的jar包到指定的文件夹里 &ndash;&gt;-->
    <!--            <plugin>-->
    <!--                <groupId>org.apache.maven.plugins</groupId>-->
    <!--                <artifactId>maven-dependency-plugin</artifactId>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <id>copy-dependencies</id>-->
    <!--                        <phase>package</phase>-->
    <!--                        <goals>-->
    <!--                            <goal>copy-dependencies</goal>-->
    <!--                        </goals>-->
    <!--                        <configuration>-->
    <!--                            <outputDirectory>${project.build.directory}/lib/</outputDirectory>-->
    <!--                        </configuration>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--            </plugin>-->
    <!--        </plugins>-->
    <!--    </build>-->

</project>
